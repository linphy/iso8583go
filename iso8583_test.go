package iso8583

import (
	"fmt"
	"testing"
)

func TestNewIsoEx(t *testing.T) {
	iso, err := NewIsoEx(0, 0, 0, IsoExDefYL)
	if err != nil {
		t.Fatal("new IsoEx err")
	}
	if iso.bittype != 0 {
		t.Fatal("new IsoEx err")
	}
	//fmt.Println(iso)
}

func TestStr2IsoEx(t *testing.T) {
	iso, err := NewIsoEx(0, 0, 0, IsoExDefYL)
	if err != nil {
		t.Fatal("new IsoEx err")
	}

	data := []byte{0x02, 0x20, 0x70, 0x24, 0x04, 0x80, 0x2c, 0xc0, 0x88, 0x18, 0x19, 0x88,
		0x80, 0x19, 0x10, 0x00, 0x00, 0x04, 0x90, 0x49, 0x60, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x00, 0x10, 0x82, 0x88, 0x80, 0x02, 0x10,
		0x00, 0x33, 0x88, 0x80, 0x19, 0x10, 0x00, 0x00, 0x04, 0x90, 0x49, 0x6d, 0x00, 0x00, 0x00, 0x10, 0x64, 0x12, 0x20, 0x30, 0x31, 0x30, 0x31, 0x30, 0x30,
		0x33, 0x37, 0x32, 0x37, 0x34, 0x37, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x38, 0x38, 0x36, 0x35, 0x34, 0x33, 0x32, 0x31, 0x38, 0x31, 0x39, 0x35, 0x34,
		0x31, 0x31, 0x30, 0x30, 0x30, 0x31, 0x30, 0x30, 0x30, 0x31, 0x31, 0x35, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x25, 0x00,
		0x00, 0x05, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}
	iso.Str2IsoEx(data)
	fmt.Println(iso)
}
